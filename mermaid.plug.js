var c=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var d=new Map,i=0;function a(t){self.postMessage(t)}c&&(globalThis.syscall=async(t,...s)=>await new Promise((r,e)=>{i++,d.set(i,{resolve:r,reject:e}),a({type:"sys",id:i,name:t,args:s})}));function l(t,s){c&&(self.addEventListener("message",r=>{(async()=>{let e=r.data;switch(e.type){case"inv":{let n=t[e.name];if(!n)throw new Error(`Function not loaded: ${e.name}`);try{let o=await Promise.resolve(n(...e.args||[]));a({type:"invr",id:e.id,result:o})}catch(o){console.error("An exception was thrown as a result of invoking function",e.name,"error:",o.message),a({type:"invr",id:e.id,error:o.message})}}break;case"sysr":{let n=e.id,o=d.get(n);if(!o)throw Error("Invalid request id");d.delete(n),e.error?o.reject(new Error(e.error)):o.resolve(e.result)}break}})().catch(console.error)}),a({type:"manifest",manifest:s}))}function u(t){let s=atob(t),r=s.length,e=new Uint8Array(r);for(let n=0;n<r;n++)e[n]=s.charCodeAt(n);return e}function g(t){typeof t=="string"&&(t=new TextEncoder().encode(t));let s="",r=t.byteLength;for(let e=0;e<r;e++)s+=String.fromCharCode(t[e]);return btoa(s)}async function h(t,s){if(typeof t!="string"){let r=new Uint8Array(await t.arrayBuffer()),e=r.length>0?g(r):void 0;s={method:t.method,headers:Object.fromEntries(t.headers.entries()),base64Body:e},t=t.url}return syscall("sandboxFetch.fetch",t,s)}globalThis.nativeFetch=globalThis.fetch;function f(){globalThis.fetch=async function(t,s){let r=s&&s.body?g(new Uint8Array(await new Response(s.body).arrayBuffer())):void 0,e=await h(t,s&&{method:s.method,headers:s.headers,base64Body:r});return new Response(e.base64Body?u(e.base64Body):null,{status:e.status,headers:e.headers})}}c&&f();function m(t){return{html:`<pre class="mermaid">${t.replaceAll("<","&lt;")}</pre>`,script:`
    loadJsByUrl("https://cdn.jsdelivr.net/npm/mermaid@10.9.3/dist/mermaid.min.js","sha256-Wo7JGCC9Va/vBJBoSJNpkQ5dbOcMgQOVLyfinT526Lw=").then(() => {
      mermaid.init().then(updateHeight);
    });
    document.addEventListener("click", () => {
      api({type: "blur"});
    });
    `}}var y={mermaidWidget:m},p={name:"mermaid",version:.1,imports:["https://get.silverbullet.md/global.plug.json"],functions:{mermaidWidget:{path:"./mermaid.ts:widget",codeWidget:"mermaid"}},assets:{}},R={manifest:p,functionMapping:y};l(y,p);export{R as plug};
